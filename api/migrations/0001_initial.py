# Generated by Django 5.2.1 on 2025-05-14 07:23

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.TextField()),
                ('ean', models.TextField(unique=True)),
                ('mpn', models.TextField(blank=True, null=True)),
                ('brand', models.TextField()),
                ('sale_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('units_sold', models.IntegerField(default=0)),
                ('amazon_fee', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('buy_box_price', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('category', models.TextField(blank=True, null=True)),
                ('rating', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('review_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'products',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'suppliers',
            },
        ),
        migrations.CreateModel(
            name='ImportHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.TextField(choices=[('Amazon Data', 'Amazon Data'), ('Supplier Data', 'Supplier Data')])),
                ('file_name', models.TextField()),
                ('status', models.TextField(choices=[('Completed', 'Completed'), ('Failed', 'Failed'), ('In Progress', 'In Progress')])),
                ('total_records', models.IntegerField(default=0)),
                ('successful_records', models.IntegerField(default=0)),
                ('failed_records', models.IntegerField(default=0)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'import_history',
            },
        ),
        migrations.CreateModel(
            name='ImportJob',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file_name', models.TextField()),
                ('file_size', models.BigIntegerField()),
                ('file_path', models.TextField()),
                ('type', models.TextField(choices=[('supplier', 'Supplier'), ('product', 'Product')])),
                ('status', models.TextField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')])),
                ('status_message', models.TextField(blank=True, null=True)),
                ('progress', models.IntegerField(default=0)),
                ('field_mapping', models.JSONField(blank=True, null=True)),
                ('match_options', models.JSONField(blank=True, null=True)),
                ('batch_size', models.IntegerField(default=100)),
                ('total_rows', models.IntegerField(blank=True, null=True)),
                ('results', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'import_jobs',
                'indexes': [models.Index(fields=['user'], name='import_jobs_user_id_3a4715_idx'), models.Index(fields=['status'], name='import_jobs_status_46b7f9_idx'), models.Index(fields=['type'], name='import_jobs_type_11af2e_idx')],
            },
        ),
        migrations.CreateModel(
            name='SupplierProduct',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ean', models.TextField()),
                ('cost', models.DecimalField(decimal_places=2, max_digits=12)),
                ('moq', models.IntegerField(default=1)),
                ('lead_time', models.TextField(default='3 days')),
                ('payment_terms', models.TextField(default='Net 30')),
                ('match_method', models.TextField(default='ean')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supplier_products', to='api.product')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supplier_products', to='api.supplier')),
            ],
            options={
                'db_table': 'supplier_products',
                'unique_together': {('supplier', 'product')},
            },
        ),
    ]
